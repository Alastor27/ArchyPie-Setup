diff -ru a/configuration.c b/configuration.c
--- a/configuration.c	2022-12-24 14:02:31.485091564 +0000
+++ b/configuration.c	2022-12-24 14:06:25.371572779 +0000
@@ -1534,6 +1534,8 @@
          settings->paths.directory_resampler, false, NULL, true);
    SETTING_PATH("video_shader_dir",
          settings->paths.directory_video_shader, true, NULL, true);
+   SETTING_PATH("video_shader",
+         settings->paths.path_shader, false, NULL, true);
    SETTING_PATH("video_filter_dir",
          settings->paths.directory_video_filter, true, NULL, true);
    SETTING_PATH("core_assets_directory",
@@ -2777,6 +2779,7 @@
    *settings->paths.directory_menu_config = '\0';
 #endif
    *settings->paths.directory_video_shader = '\0';
+   *settings->paths.path_shader = '\0';
    *settings->paths.directory_video_filter = '\0';
    *settings->paths.directory_audio_filter = '\0';
 
@@ -4722,6 +4725,10 @@
    {
       for (i = 0; i < (unsigned)path_settings_size; i++)
       {
+         /* blacklist 'video_shader', better handled by shader presets */
+         if (string_is_equal(path_settings[i].ident, "video_shader"))
+             continue;
+
          const char *value = path_settings[i].ptr;
 
          if (path_settings[i].def_enable && string_is_empty(path_settings[i].ptr))
@@ -5074,6 +5081,10 @@
 
       for (i = 0; i < (unsigned)path_settings_size; i++)
       {
+         /* blacklist 'video_shader', better handled by shader presets */
+         if (string_is_equal(path_settings[i].ident, "video_shader"))
+             continue;
+
          if (!string_is_equal(path_settings[i].ptr, path_overrides[i].ptr))
             config_set_path(conf, path_overrides[i].ident,
                   path_overrides[i].ptr);
diff -ru a/configuration.h b/configuration.h
--- a/configuration.h	2022-12-24 14:02:31.485091564 +0000
+++ b/configuration.h	2022-12-24 14:06:25.371572779 +0000
@@ -494,6 +494,7 @@
       char path_cheat_settings[PATH_MAX_LENGTH];
       char path_font[PATH_MAX_LENGTH];
       char path_rgui_theme_preset[PATH_MAX_LENGTH];
+      char path_shader[PATH_MAX_LENGTH];
 
       char directory_audio_filter[PATH_MAX_LENGTH];
       char directory_autoconfig[PATH_MAX_LENGTH];
diff -ru a/gfx/video_shader_parse.c b/gfx/video_shader_parse.c
--- a/gfx/video_shader_parse.c	2022-12-24 14:02:32.093103224 +0000
+++ b/gfx/video_shader_parse.c	2022-12-24 14:06:25.372572799 +0000
@@ -2403,9 +2403,10 @@
       {
          if (string_is_empty(special_name))
             break;
-
-         fill_pathname_join(s, shader_directory, special_name, len);
-         strlcat(s, video_shader_get_preset_extension(types[i]), len);
+         if (strcmp(special_name, "config")!=0) {
+            fill_pathname_join(s, shader_directory, special_name, len);
+            strlcat(s, video_shader_get_preset_extension(types[i]), len);
+         }
       }
 
       if (path_is_valid(s))
@@ -2489,6 +2490,17 @@
                "global"))
          goto success;
    }
+   /* Configuration file shader found ? */
+   strlcpy(shader_path, settings->paths.path_shader, PATH_MAX_LENGTH);
+   if (!string_is_empty(shader_path)) {
+      RARCH_LOG("[Shaders/RetroPie]: Configuration file shader path found.\n");
+      if(retroarch_load_shader_preset_internal(
+            shader_path,
+            sizeof(shader_path),
+            NULL, NULL,
+            "config"))
+         goto success;
+   }
    return false;
 
 success:
